[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "fgms-2023",
    "section": "",
    "text": "Preface\nThis is a Quarto book."
  },
  {
    "objectID": "e1-01-ntrees.html",
    "href": "e1-01-ntrees.html",
    "title": "1  e1 Number of trees",
    "section": "",
    "text": "library(tidyverse)\nlibrary(ez)\nlibrary(gt)\nlibrary(rsvg)\nlibrary(svglite)\n\n\noptions(contrasts=c(\"contr.sum\",\"contr.poly\"))\noptions(dplyr.summarise.inform=F)\npd <- position_dodge(0.1)\n\n\ne1 <- readRDS(\"001-00-e1-data.RDS\")\n\n# remove things from the raw data to make it suitable \n# for this particular analysis\n\n# remove samples that did not look at a tree\ne1 <- e1 %>% \n  filter(fl>0)\n\n# remove the second (and any subsequent) *consecutive* duplicates\ne1 <- e1 %>% \n  filter(is.na(tl != lag(tl)) | tl != lag(tl))\n\n# remove trials where they failed to get 10 fruit\ne1 <- e1 %>% \n  group_by(pp, te) %>% \n  mutate(max_fr = max(fr)) %>% \n  ungroup() %>% \n  filter(max_fr==10)\n\ne1_ntrees <-\n  e1 %>%\n  transmute(\n    ex =1,\n    pp           = as_factor(pp),\n    trial        = tb, # is 1 to 10 for each condition of \"resources\"\n    rr    = factor(rr, levels=c(\"dispersed\", \"patchy\"), labels=c(\"dispersed\", \"patchy\")),\n    st        = as_factor(ifelse(tb<=5, \"early\", \"late\")),\n    index        = ix,\n    tree         = tl)\n\ne1_ntrees_TRIAL_SUMS <- \n  e1_ntrees %>% \n  group_by(ex, pp, rr, st, trial) %>% \n  summarise(ntrees=n())\n\ne1_ntrees_PARTICIPANT_MEANS <-\n  e1_ntrees_TRIAL_SUMS %>% \n  group_by(ex, pp, rr, st) %>% \n  summarise(mean_ntrees_per_st = mean(ntrees))\n\nSave plot data\n\nsaveRDS(e1_ntrees_PARTICIPANT_MEANS,\"e1_ntrees_plot_data.rds\")"
  },
  {
    "objectID": "e1-02-revisits.html",
    "href": "e1-02-revisits.html",
    "title": "2  e1 Revisits",
    "section": "",
    "text": "library(tidyverse)\nlibrary(ez)\nlibrary(gt)\nlibrary(rsvg)\nlibrary(svglite)\n\n\noptions(contrasts=c(\"contr.sum\",\"contr.poly\"))\noptions(dplyr.summarise.inform=F)\n\n\nsuppressPackageStartupMessages(library(tidyverse))\nlibrary(ez)\nlibrary(gt)\npd <- position_dodge(0.1)\n\ne1 <- readRDS(\"001-00-e1-data.RDS\")\n\n# remove things from the raw data to make it suitable \n# for this particular analysis\n\n# remove samples that did not look at a tree\ne1 <- e1 %>% \n  filter(fl>0)\n\n# remove the second (and any subsequent) *consecutive* duplicates\ne1 <- e1 %>% \n  filter(is.na(tl != lag(tl)) | tl != lag(tl))\n\n# remove trials where they failed to get 10 fruit\ne1 <- e1 %>% \n  group_by(pp, te) %>% \n  mutate(max_fr = max(fr)) %>% \n  ungroup() %>% \n  filter(max_fr==10) %>% \n  select(-max_fr)\n\n# annotate with is a revisit\ne1 <- e1 %>% \n  group_by(pp,tt) %>% \n  mutate(\n    is_a_revisit = duplicated(tl)\n    ) %>% \n  ungroup()\n\n15,108 rows\nCurrently every sample that landed in a tree is present in the data.\nFor this fr, the dv is true if the tree has been visited before in the trial, and false if it’s the first time they have visited the tree.\nHaving obtained fr number of fruit, and while searching for the fr+1th fruit, how many times did they revisit a tree that they had previously visited in the trial?\nThe question expressed this way allows us to see that while fr == 0 they are looking for the first fruit, and so revisits are possible; whereas as soon as fr becomes 10 the trial is over: it’s not possible to do any revisits while looking for the 11th fruit. The dv is always false for fr of 10. While fr==0 it’s possible to get NA revisits: this is the case when they get a fruit on the first tree they look at.\nWe remove samples that landed in the 10th fruit.\n\ne1.revisits <- e1 %>% \n  filter(fr != 10)\n\n14,291 rows\nAt this point the data have a row for each sample that landed in a tree except the final sample where fr becomes 10.\nThe next step shrinks the data by switching from true/false for whether this sample was a revisit, to a count of how many revisits there were while searching for the next fruit. Only some trials have counts while fr is 0 – the count can be zero if they don’t revisit any trees on the way to finding the first fruit if they visit some non-fruit-bearing trees on the way. The highest count for fr of 0 is 4 – they revisited 4 trees that didn’t bear fruit before finding the first fruit-bearing tree. If they didn’t fixate any non-fruit-bearing trees before fixating the first fruit, that row is simply a structural missing. Hence this df has 7783 rows whereas if there were no structural missing there would be 42210*10=8400 (after bringing fr down to 0:9).\n\ne1.revisit.counts.sparse <- e1.revisits %>% \n  group_by(across(c(ex, pp, rr, st, tb, fr))) %>% \n  summarise(n_revisits_per_fruit = sum(is_a_revisit)) %>% \n  ungroup()\n\n7,783 rows\nAn issue here is that the resulting matrix is sparse unless we join it to a matrix representing the experimental design, so we have to do the full_join\n\nMatrix representing the full design\n\n\ne1.design = tibble(\n  expand_grid(ex = 1, \n              pp = unique(e1.revisits$pp), \n              rr = sort(unique(e1.revisits$rr)), \n              tb = unique(e1.revisits$tb),\n              st = \"\", \n              fr = 0:9) %>% \n    mutate(st = ifelse(tb <=5, \"early\", \"late\"))\n)\n\n\nfull_join to make the matrix non-sparse\n\n\ne1.revisit.counts.notsparse <- \n  full_join(e1.design, e1.revisit.counts.sparse) %>% \n  arrange(pp, rr, tb, fr)\n\nNow we have 8400 rows. The padding inserted NA for fr of 0 for trials where there were no revisits on the way to the first fruit. This happened 409 times.\nWe say that if revisits is NA then we convert the NA to zero. Thus embodies the opinion that they did not in fact do any revisits, even though getting a fruit on the first tree ‘denied’ them the possibility of racking up a revisit while fr was 0.\n\ne1.revisit.counts.notsparse <- e1.revisit.counts.notsparse %>% \n  replace_na(list(n_revisits_per_fruit = 0))\n\nWe have 8400 cases made by fully crossing these: * pp (42) * rr (2) * tb (10) which is st (2) * tb[1:5] or tb[6:10] * fr (10)\nFirst we take the average, over each of 5 trials, of the count at each fruit-gathering episode.\n\nkv = e1.revisit.counts.notsparse %>% \n  group_by(pp, rr, st, fr) %>% \n  summarise(nr=mean(n_revisits_per_fruit))\n\nFactor it.\n\nkv <- kv%>% mutate(pp=as_factor(pp), rr=as_factor(rr), st=as_factor(st), fr=as_factor(fr))\n\nThis is now 42 * 2 * 2 * 10 and suitable for ANOVA\n\nkva=ezANOVA(\n  data   = kv,\n  dv     = nr,\n  wid    = pp,\n  within = c(rr, st, fr),\n  type   = 3)  \nkva$ANOVA %>% \n  select(-ges) %>% \n  gt() %>% \n  tab_header(\n    title=\"Number of revisits\",\n    subtitle = \"ANOVA table\"\n  ) %>% \n  fmt_number(\n    columns = c(\"F\"),\n    rows=everything(),\n    decimals=2\n  )  %>% \n  fmt_number(\n    columns = c(\"p\"),\n    rows=everything(),\n    decimals=3\n  ) %>% \n  cols_align(\n    columns=`p<.05`,\n    align=\"center\"\n  )\n\n\n\n\n\n  \n    \n      Number of revisits\n    \n    \n      ANOVA table\n    \n  \n  \n    \n      Effect\n      DFn\n      DFd\n      F\n      p\n      p<.05\n    \n  \n  \n    rr\n1\n41\n4.22\n0.046\n*\n    st\n1\n41\n12.17\n0.001\n*\n    fr\n9\n369\n6.31\n0.000\n*\n    rr:st\n1\n41\n0.11\n0.738\n\n    rr:fr\n9\n369\n4.44\n0.000\n*\n    st:fr\n9\n369\n0.65\n0.755\n\n    rr:st:fr\n9\n369\n1.05\n0.402\n\n  \n  \n  \n\n\n\n\nNow we average over all the fruit-gathering events for a given stage.\n\nkv2 <- kv %>% \n  group_by(pp, rr, st) %>% \n  summarise(mu = mean(nr))\n\nAnd save the plot data\n\nsaveRDS(kv2,\"e1-02-revisits.qmd\")\n\nTables\n\n(e1.revisit.counts.notsparse %>% group_by(pp,rr,st,fr,tb) %>% summarise(m=mean(n_revisits_per_fruit))) %>% group_by(fr) %>% summarise(m=mean(m))# %>% group_by(st) %>% summarise(m=mean(m)))\n\n# A tibble: 10 × 2\n      fr      m\n   <int>  <dbl>\n 1     0 0.0583\n 2     1 0.108 \n 3     2 0.075 \n 4     3 0.0548\n 5     4 0.075 \n 6     5 0.0857\n 7     6 0.0726\n 8     7 0.0726\n 9     8 0.120 \n10     9 0.182 \n\n\n\n(kv %>% group_by(pp,rr,st) %>% summarise(m=mean(nr)) %>% group_by(rr,st) %>% summarise(m=mean(m)) %>% group_by(st) %>% summarise(m=mean(m)))\n\n# A tibble: 2 × 2\n  st         m\n  <fct>  <dbl>\n1 early 0.103 \n2 late  0.0783"
  },
  {
    "objectID": "e1-03-retrieval.html",
    "href": "e1-03-retrieval.html",
    "title": "3  e1 Retrieval Rate",
    "section": "",
    "text": "library(tidyverse)\nlibrary(ez)\nlibrary(gt)\nlibrary(rsvg)\nlibrary(svglite)\n\nRetrieval Rate is “How many trees did they visit to get this fruit?”\n\noptions(contrasts=c(\"contr.sum\",\"contr.poly\"))\noptions(dplyr.summarise.inform=F)\nknitr::opts_chunk$set(message = FALSE)\n\n\nlibrary(tidyverse)\nlibrary(ez)\nlibrary(gt)\npd <- position_dodge(0.1)\n\n\ne1 <- readRDS(\"001-00-e1-data.RDS\")\n\n# remove things from the raw data to make it suitable \n# for this particular analysis\n\n# remove samples that did not look at a tree\ne1 <- e1 %>% \n  filter(fl>0)\n\n# remove the second (and any subsequent) *consecutive* duplicates\ne1 <- e1 %>% \n  filter(is.na(tl != lag(tl)) | tl != lag(tl))\n\n# remove trials where they failed to get 10 fruit\ne1 <- e1 %>% \n  group_by(pp, te) %>% \n  mutate(max_fr = max(fr)) %>% \n  ungroup() %>% \n  filter(max_fr==10) %>% \n  select(-c(max_fr))\n\nAnnotate: “How many trees did they visit to get this fruit?”\n\ne1.retrieval <- e1\ne1.retrieval$n_trees_per_fruit = NA\nj = 0\nfor (k in seq_along(e1.retrieval$ix)) {\n j = j + 1\n if (e1.retrieval[k, 'fl']==2) {\n   e1.retrieval[k, 'n_trees_per_fruit'] = j\n   j = 0\n }\n}\n\nYou don’t want to retain zero counts because there is no such thing as 0 for “How many trees did they visit to get this fruit?”\n\ne1.retrieval <- e1.retrieval %>%  \n  filter(n_trees_per_fruit != 0)\n\nThe data are valid row-per-sample here.\nWe want to collapse to the level of the fruit-seeking event.\nBy definition, fr==0 is NA for n_trees_per_fruit – they haven’t got a fruit yet, so they can’t have visited any trees to get to no fruit.\nThere is no such thing as 0 for “How many trees did they visit to get this fruit?” so we don’t do anything about having a sparse matrix.\nThe minimum number of trees looked at to get a fruit is 1: the look that scored the fruit.\n\ne1.retrieval_per_fruit <- e1.retrieval %>% \n  group_by(across(c(ex,pp,rr,st,tb,fr))) %>% \n  summarise(retrieval_per_fruit = sum(na.rm=T,n_trees_per_fruit))\n\nCollapse over trials to yield average per-fruit n trees\n\ne1.mean_retrieval_per_fruit <- e1.retrieval_per_fruit %>% \n  group_by(across(c(ex,pp,rr, fr))) %>% \n  summarise(mean_retrieval_per_fruit = mean(retrieval_per_fruit))\n\nMake plot data\n\nsaveRDS(e1.mean_retrieval_per_fruit,\"e1_retrieval_plot_data.rds\")"
  },
  {
    "objectID": "e1-04-distance.html",
    "href": "e1-04-distance.html",
    "title": "4  e1 Distance",
    "section": "",
    "text": "library(tidyverse)\nlibrary(ez)\nlibrary(gt)\nlibrary(rsvg)\nlibrary(svglite)\n\nwhat was the Euclidian distance between tree visits?\n\noptions(contrasts=c(\"contr.sum\",\"contr.poly\"))\noptions(dplyr.summarise.inform=F)\nknitr::opts_chunk$set(message = FALSE)\n\n\nlibrary(tidyverse)\nlibrary(ez)\nlibrary(gt)\npd <- position_dodge(0.1)\n\n\ne1 <- readRDS(\"001-00-e1-data.RDS\")\n\n# remove things from the raw data to make it suitable \n# for this particular analysis\n\n# remove samples that did not look at a tree\ne1 <- e1 %>% \n  filter(fl>0)\n\n# remove the second (and any subsequent) *consecutive* duplicates\ne1 <- e1 %>% \n  filter(is.na(tl != lag(tl)) | tl != lag(tl))\n\n# remove trials where they failed to get 10 fruit\ne1 <- e1 %>% \n  group_by(pp, te) %>% \n  mutate(max_fr = max(fr)) %>% \n  ungroup() %>% \n  filter(max_fr==10) %>% \n  select(-c(max_fr))\n\nAnnotate: what was the Euclidian distance between tree visits?\nThis is sparse because not everything has fr of 0. Ok for the graph but not the ANoVA\n\ne1.distance <- e1\ne1.distance <- e1.distance %>%\n  group_by(across(c(ex,pp,rr,tb))) %>% \n  mutate(distance = sqrt((lead(xx)-xx)^2 + (lead(yy)-yy)^2)) %>% \n  ungroup()\n\nCollapse over fruit-seeking events to yield mean distance at the stage:trial:launch level\n\ne1.distance.stl.means <- e1.distance %>% \n  group_by(ex, pp, rr, st, tb, ll) %>% \n  summarise(mean_distance = mean(distance, na.rm=TRUE))\n\nCollapse over trials to yield stage:launch means\n\ne1.distance.sl.means <- e1.distance.stl.means %>% \n  group_by(ex, pp, rr, st, ll) %>% \n  summarise(mu_distance = mean(mean_distance))\n\nSave plot data\n\nsaveRDS(e1.distance.sl.means, \"e1_distance_plot_data.rds\")"
  }
]