{
  "hash": "86c147f346c410a85de3da38746255ec",
  "result": {
    "markdown": "## e1 Distance\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ez)\nlibrary(gt)\nlibrary(rsvg)\nlibrary(svglite)\n```\n:::\n\n\nwhat was the Euclidian distance between tree visits?\n\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(contrasts=c(\"contr.sum\",\"contr.poly\"))\noptions(dplyr.summarise.inform=F)\nknitr::opts_chunk$set(message = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ez)\nlibrary(gt)\npd <- position_dodge(0.1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ne1 <- readRDS(\"001-00-e1-data.RDS\")\n\n# remove things from the raw data to make it suitable \n# for this particular analysis\n\n# remove samples that did not look at a tree\ne1 <- e1 %>% \n  filter(fl>0)\n\n# remove the second (and any subsequent) *consecutive* duplicates\ne1 <- e1 %>% \n  filter(is.na(tl != lag(tl)) | tl != lag(tl))\n\n# remove trials where they failed to get 10 fruit\ne1 <- e1 %>% \n  group_by(pp, te) %>% \n  mutate(max_fr = max(fr)) %>% \n  ungroup() %>% \n  filter(max_fr==10) %>% \n  select(-c(max_fr))\n```\n:::\n\n\nAnnotate: what was the Euclidian distance between tree visits?\n\nThis is sparse because not everything has fr of 0. Ok for the graph but not the ANoVA\n\n\n::: {.cell}\n\n```{.r .cell-code}\ne1.distance <- e1\ne1.distance <- e1.distance %>%\n  group_by(across(c(ex,pp,rr,tb))) %>% \n  mutate(distance = sqrt((lead(xx)-xx)^2 + (lead(yy)-yy)^2)) %>% \n  ungroup()\n```\n:::\n\n\nCollapse over fruit-seeking events to yield mean distance at the stage:trial:launch level\n\n\n::: {.cell}\n\n```{.r .cell-code}\ne1.distance.stl.means <- e1.distance %>% \n  group_by(ex, pp, rr, st, tb, ll) %>% \n  summarise(mean_distance = mean(distance, na.rm=TRUE))\n```\n:::\n\n\nCollapse over trials to yield stage:launch means\n\n\n::: {.cell}\n\n```{.r .cell-code}\ne1.distance.sl.means <- e1.distance.stl.means %>% \n  group_by(ex, pp, rr, st, ll) %>% \n  summarise(mu_distance = mean(mean_distance))\n```\n:::\n\n\nSave plot data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(e1.distance.sl.means, \"e1_distance_plot_data.rds\")\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}